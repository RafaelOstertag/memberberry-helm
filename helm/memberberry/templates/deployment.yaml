# @formatter:off
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "memberberry.fullname" . }}
  labels:
    {{- include "memberberry.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "memberberry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "memberberry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "memberberry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          env:
            - name: QUARKUS_MONGODB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: mongo
                  key: connection-url
            - name: QUARKUS_OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: client-id
            - name: QUARKUS_OIDC_CREDENTIALS_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: client-secret
            - name: QUARKUS_LOG_HANDLER_GELF_ENABLED
              value: "true"
            - name: QUARKUS_LOG_HANDLER_GELF_HOST
              value: "udp:192.168.100.3"
            - name: QUARKUS_LOG_HANDLER_GELF_PORT
              value: "12201"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /config/secrets/firebase.cred.json
          volumeMounts:
            - name: firebase-credentials
              mountPath: /config/secrets
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: firebase-credentials
          secret:
            secretName: firebase-credentials
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
